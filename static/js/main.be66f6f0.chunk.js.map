{"version":3,"sources":["components/ui-components/Header/index.js","components/ui-components/Footer/index.js","fixtures/index.js","components/CostEstimation/index.js","utils/index.js","components/ui-components/Dashboard/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Footer","paintLocationDetails","interior","paint_area","paint_types","standard","premium","super_premium","luxury","exterior","cities","cities_options","map","city","value","initial_paint_area","initial_paint_types","Form","useForm","form","useState","paintArea","setPaintArea","paintTypes","setPaintTypes","currentPaintType","setCurrentPaintType","onFinish","values","console","log","Item","name","label","hasFeedback","rules","required","message","options","placeholder","filterOption","inputValue","option","toUpperCase","indexOf","initialValue","Group","onKeyPress","event","charC","which","keyCode","preventDefault","onChange","newLocationType","target","hasOwnProperty","setFieldsValue","paint_name","Button","length","paintAreaValue","str_val","charAt","slice","newPaintType","paint_type","Object","keys","paintType","paintNames","paintName","type","htmlType","Content","Layout","CostEstimation","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"0SAMe,G,cAAA,WACb,OACE,kBAAC,IAAOA,OAAR,CAAeC,UAAU,kBACvB,0DCLS,aACb,OAAO,kBAAC,IAAOC,OAAR,6B,qDCLIC,EAAuB,CAClCC,SAAU,CACRC,WAAY,CAAC,QAAS,UAAW,QACjCC,YAAa,CACXC,SAAU,CAAC,oBACXC,QAAS,CAAC,oBACVC,cAAe,CAAC,wBAAyB,oBACzCC,OAAQ,CAAC,cAAe,kBAG5BC,SAAU,CACRN,WAAY,CAAC,SACbC,YAAa,CACXC,SAAU,CAAC,gBACXC,QAAS,CAAC,iBACVC,cAAe,CAAC,eAChBC,OAAQ,CAAC,0BAKFE,EAAS,CACpB,UACA,YACA,YACA,aACA,SACA,YACA,QACA,aACA,cACA,UACA,SACA,YACA,SACA,WACA,aACA,WACA,aACA,SACA,UACA,gBACA,aACA,YACA,aACA,SACA,YACA,UACA,YACA,UACA,SACA,aACA,YACA,SACA,WACA,yBACA,cACA,cACA,SACA,YACA,YACA,UACA,YACA,eACA,cACA,YACA,cACA,kBACA,UACA,SACA,aACA,aACA,SACA,WACA,aACA,YACA,SACA,aACA,WACA,UACA,cACA,YACA,iBACA,WACA,cACA,UACA,YACA,SACA,UACA,YACA,UACA,aACA,WACA,WACA,YACA,WACA,SACA,WACA,cACA,cACA,aACA,wBACA,aACA,WACA,YACA,aACA,gBACA,YACA,cACA,SACA,WACA,YACA,WACA,UACA,oBACA,QACA,YACA,OACA,SACA,gBACA,eACA,WACA,WACA,YACA,qBACA,WACA,SACA,kBACA,UACA,eACA,SACA,UACA,aACA,SACA,aACA,gBACA,aACA,cACA,cACA,UACA,QACA,WACA,eACA,cACA,eACA,kBACA,eACA,gBACA,YACA,SACA,cACA,aACA,WACA,WACA,cACA,SACA,aACA,aACA,SACA,cACA,SACA,YACA,SACA,SACA,oBACA,WACA,SACA,UACA,SACA,WACA,eACA,YACA,SACA,aACA,WACA,mBACA,YACA,WACA,QACA,YACA,SACA,iBACA,SACA,QACA,UACA,YACA,aACA,cACA,YACA,aACA,YACA,kBACA,cACA,eACA,cACA,iBACA,aACA,QACA,YACA,WACA,UACA,aACA,SACA,UACA,WACA,aACA,qBACA,kBACA,iBACA,YACA,YACA,QACA,YACA,UACA,WACA,YACA,WACA,SACA,WACA,UACA,WACA,aACA,eACA,SACA,SACA,UACA,WACA,UACA,WACA,WACA,aACA,WACA,YACA,cACA,SACA,eACA,cACA,UACA,SACA,iBACA,mBACA,gBACA,UACA,UACA,YACA,YACA,aACA,UACA,aACA,WACA,SACA,cACA,YACA,SACA,YACA,cACA,WACA,WACA,aACA,mBACA,UACA,cACA,QACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,aACA,gBACA,eACA,UACA,cACA,cACA,iBACA,cACA,UACA,WACA,YACA,WACA,WACA,WACA,UACA,aACA,YACA,YACA,SACA,UACA,wBACA,cACA,cACA,SACA,SACA,YACA,WACA,UACA,SACA,QACA,aACA,gBACA,SACA,cACA,WACA,WACA,aACA,YACA,SACA,QACA,WACA,YACA,iBACA,eACA,aACA,eACA,WACA,eACA,YACA,cACA,YACA,YACA,cACA,WACA,YACA,UACA,aACA,SACA,WACA,mBACA,aACA,UACA,kBACA,eACA,WACA,aACA,QACA,aACA,UACA,SACA,YACA,eACA,WACA,UACA,WACA,cACA,iBACA,eACA,UACA,YACA,UACA,UACA,gBACA,UACA,SACA,aACA,UACA,WACA,YACA,kBACA,aACA,WACA,eACA,gBACA,UACA,eACA,8BACA,WACA,WACA,WACA,aACA,WACA,aACA,SACA,oBACA,iBACA,UACA,QACA,aACA,aACA,YACA,YACA,QACA,cACA,UACA,aACA,YACA,WACA,UACA,YACA,SACA,aACA,WACA,SACA,YACA,oBACA,aACA,aACA,cACA,aACA,cACA,eACA,QACA,QACA,UACA,YACA,cACA,WACA,WACA,WACA,UACA,eACA,eACA,qBACA,UACA,eACA,mBACA,cACA,UACA,UACA,cACA,YACA,UACA,gCACA,iBACA,QACA,UACA,UACA,iBACA,UACA,WACA,YACA,SACA,cACA,WACA,SACA,aACA,WACA,uBACA,YACA,WACA,UACA,SACA,kBACA,gBACA,UACA,SACA,aACA,gBACA,UACA,cACA,YACA,UACA,WACA,YACA,SACA,WACA,YACA,aACA,SACA,WACA,SACA,WACA,WACA,iBACA,cACA,YACA,aACA,oBACA,aACA,SACA,yBACA,YACA,kBACA,YACA,YACA,UACA,SACA,YACA,aACA,sBACA,gBACA,YACA,mBACA,eACA,YACA,YACA,kBACA,gBACA,YACA,QACA,UACA,WACA,SACA,SACA,UACA,cACA,YACA,SACA,qBACA,YACA,UACA,YACA,oBACA,WACA,WACA,WACA,cACA,gBACA,gBACA,YACA,UACA,eACA,aCjfa,aACb,IAAMC,EAAiBD,EAAOE,KAAI,SAACC,GAAD,MAAW,CAAEC,MAAOD,MAClDE,EAAqB,GACrBC,EAAsB,GACpBf,GAA0BA,EAAqBC,WACnDa,EAAuBd,EAAqBC,SAASC,WACjDF,EAAqBC,SAASC,WAC9B,GACJa,EAAwBf,EAAqBC,SAASE,YAClDH,EAAqBC,SAASE,YAC9B,IAVa,MAaJa,IAAKC,UAAbC,EAbY,sBAceC,mBAASL,GAdxB,mBAcZM,EAdY,KAcDC,EAdC,OAeiBF,mBAASJ,GAf1B,mBAeZO,EAfY,KAeAC,EAfA,OAgB6BJ,mBAAS,YAhBtC,mBAgBZK,EAhBY,KAgBMC,EAhBN,KAwDnB,OACE,6BACE,kBAAC,IAAD,CAAMC,SANW,SAACC,GACpBC,QAAQC,IAAI,oCAAqCF,IAKjBT,KAAMA,GAClC,kBAAC,IAAKY,KAAN,CACEC,KAAK,OACLC,MAAM,gBACNC,aAAW,EACXC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAIb,kBAAC,IAAD,CACEC,QAAS3B,EACT4B,YAAY,uBACZC,aAAc,SAACC,EAAYC,GAAb,OAEX,IADDA,EAAO5B,MAAM6B,cAAcC,QAAQH,EAAWE,mBAKpD,kBAAC,IAAKZ,KAAN,CACEC,KAAK,+BACLC,MAAM,gBA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","file":"static/js/main.be66f6f0.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Header.css\";\n\nimport { Layout } from \"antd\";\n\nexport default () => {\n  return (\n    <Layout.Header className=\"header-section\">\n      <h3>Painting Cost Estimator</h3>\n    </Layout.Header>\n  );\n};\n","import React from \"react\";\n\nimport { Layout } from \"antd\";\n\nexport default () => {\n  return <Layout.Footer>Built by Anusha Rao</Layout.Footer>;\n};\n","export const paintLocationDetails = {\n  interior: {\n    paint_area: [\"walls\", \"ceiling\", \"both\"],\n    paint_types: {\n      standard: [\"Tractor Emulsion\"],\n      premium: [\"Premium Emulsion\"],\n      super_premium: [\"Royal Luxury Emulsion\", \"Royal Matt/Shyne\"],\n      luxury: [\"Royal Atmos\", \"Royal Aspira\"],\n    },\n  },\n  exterior: {\n    paint_area: [\"walls\"],\n    paint_types: {\n      standard: [\"Ace Emulsion\"],\n      premium: [\"Apex Emulsion\"],\n      super_premium: [\"Apex Ultima\"],\n      luxury: [\"Apex Ultima Protech\"],\n    },\n  },\n};\n\nexport const cities = [\n  \"Abohar \",\n  \"Achalpur \",\n  \"Adilabad \",\n  \"Adityapur \",\n  \"Adoni \",\n  \"Agartala \",\n  \"Agra \",\n  \"Ahmadabad \",\n  \"Ahmadnagar \",\n  \"Aizawl \",\n  \"Ajmer \",\n  \"Akbarpur \",\n  \"Akola \",\n  \"Alandur \",\n  \"Alappuzha \",\n  \"Aligarh \",\n  \"Allahabad \",\n  \"Alwar \",\n  \"Ambala \",\n  \"Ambala Sadar \",\n  \"Ambarnath \",\n  \"Ambattur \",\n  \"Ambikapur \",\n  \"Ambur \",\n  \"Amravati \",\n  \"Amreli \",\n  \"Amritsar \",\n  \"Amroha \",\n  \"Anand \",\n  \"Anantapur \",\n  \"Anantnag \",\n  \"Arrah \",\n  \"Asansol \",\n  \"Ashoknagar Kalyangarh \",\n  \"Aurangabad \",\n  \"Aurangabad \",\n  \"Avadi \",\n  \"Azamgarh \",\n  \"Badlapur \",\n  \"Bagaha \",\n  \"Bagalkot \",\n  \"Bahadurgarh \",\n  \"Baharampur \",\n  \"Bahraich \",\n  \"Baidyabati \",\n  \"Baleshwar Town \",\n  \"Ballia \",\n  \"Bally \",\n  \"Bally City\",\n  \"Balurghat \",\n  \"Banda \",\n  \"Bankura \",\n  \"Bansberia \",\n  \"Banswara \",\n  \"Baran \",\n  \"Baranagar \",\n  \"Barasat \",\n  \"Baraut \",\n  \"Barddhaman \",\n  \"Bareilly \",\n  \"Baripada Town \",\n  \"Barnala \",\n  \"Barrackpur \",\n  \"Barshi \",\n  \"Basirhat \",\n  \"Basti \",\n  \"Batala \",\n  \"Bathinda \",\n  \"Beawar \",\n  \"Begusarai \",\n  \"Belgaum \",\n  \"Bellary \",\n  \"Bengaluru\",\n  \"Bettiah \",\n  \"Betul \",\n  \"Bhadrak \",\n  \"Bhadravati \",\n  \"Bhadreswar \",\n  \"Bhagalpur \",\n  \"Bhalswa Jahangir Pur \",\n  \"Bharatpur \",\n  \"Bharuch \",\n  \"Bhatpara \",\n  \"Bhavnagar \",\n  \"Bhilai Nagar \",\n  \"Bhilwara \",\n  \"Bhimavaram \",\n  \"Bhind \",\n  \"Bhiwadi \",\n  \"Bhiwandi \",\n  \"Bhiwani \",\n  \"Bhopal \",\n  \"Bhubaneswar Town \",\n  \"Bhuj \",\n  \"Bhusawal \",\n  \"Bid \",\n  \"Bidar \",\n  \"Bidhan Nagar \",\n  \"Biharsharif \",\n  \"Bijapur \",\n  \"Bikaner \",\n  \"Bilaspur \",\n  \"Bokaro Steel City \",\n  \"Bongaon \",\n  \"Botad \",\n  \"Brahmapur Town \",\n  \"Budaun \",\n  \"Bulandshahr \",\n  \"Bundi \",\n  \"Burari \",\n  \"Burhanpur \",\n  \"Buxar \",\n  \"Champdani \",\n  \"Chandannagar \",\n  \"Chandausi \",\n  \"Chandigarh \",\n  \"Chandrapur \",\n  \"Chapra \",\n  \"Chas \",\n  \"Chennai \",\n  \"Chhattarpur \",\n  \"Chhindwara \",\n  \"Chikmagalur \",\n  \"Chilakaluripet \",\n  \"Chitradurga \",\n  \"Chittaurgarh \",\n  \"Chittoor \",\n  \"Churu \",\n  \"Coimbatore \",\n  \"Cuddalore \",\n  \"Cuttack \",\n  \"Dabgram \",\n  \"Dallo Pura \",\n  \"Damoh \",\n  \"Darbhanga \",\n  \"Darjiling \",\n  \"Datia \",\n  \"Davanagere \",\n  \"Deesa \",\n  \"Dehradun \",\n  \"Dehri \",\n  \"Delhi \",\n  \"Delhi Cantonment \",\n  \"Deoghar \",\n  \"Deoli \",\n  \"Deoria \",\n  \"Dewas \",\n  \"Dhanbad \",\n  \"Dharmavaram \",\n  \"Dhaulpur \",\n  \"Dhule \",\n  \"Dibrugarh \",\n  \"Dimapur \",\n  \"Dinapur Nizamat \",\n  \"Dindigul \",\n  \"Dum Dum \",\n  \"Durg \",\n  \"Durgapur \",\n  \"Eluru \",\n  \"English Bazar \",\n  \"Erode \",\n  \"Etah \",\n  \"Etawah \",\n  \"Faizabad \",\n  \"Faridabad \",\n  \"Farrukhabad\",\n  \"Fatehpur \",\n  \"Firozabad \",\n  \"Firozpur \",\n  \"Gadag-Betigeri \",\n  \"Gandhidham \",\n  \"Gandhinagar \",\n  \"Ganganagar \",\n  \"Gangapur City \",\n  \"Gangawati \",\n  \"Gaya \",\n  \"Ghazipur \",\n  \"Giridih \",\n  \"Godhra \",\n  \"Gokal Pur \",\n  \"Gonda \",\n  \"Gondal \",\n  \"Gondiya \",\n  \"Gorakhpur \",\n  \"Greater Hyderabad \",\n  \"Greater Mumbai \",\n  \"Greater Noida \",\n  \"Gudivada \",\n  \"Gulbarga \",\n  \"Guna \",\n  \"Guntakal \",\n  \"Guntur \",\n  \"Gurgaon \",\n  \"Guwahati \",\n  \"Gwalior \",\n  \"Habra \",\n  \"Hajipur \",\n  \"Haldia \",\n  \"Haldwani\",\n  \"Halisahar \",\n  \"Hanumangarh \",\n  \"Haora \",\n  \"Hapur \",\n  \"Hardoi \",\n  \"Hardwar \",\n  \"Hassan \",\n  \"Hastsal \",\n  \"Hathras \",\n  \"Hazaribag \",\n  \"Hindaun \",\n  \"Hindupur \",\n  \"Hinganghat \",\n  \"Hisar \",\n  \"Hoshangabad \",\n  \"Hoshiarpur \",\n  \"Hospet \",\n  \"Hosur \",\n  \"Hubli-Dharwad \",\n  \"Hugli-Chinsurah \",\n  \"Ichalkaranji \",\n  \"Imphal \",\n  \"Indore \",\n  \"Jabalpur \",\n  \"Jagadhri \",\n  \"Jagdalpur \",\n  \"Jaipur \",\n  \"Jalandhar \",\n  \"Jalgaon \",\n  \"Jalna \",\n  \"Jalpaiguri \",\n  \"Jamalpur \",\n  \"Jammu \",\n  \"Jamnagar \",\n  \"Jamshedpur \",\n  \"Jamuria \",\n  \"Jaunpur \",\n  \"Jehanabad \",\n  \"Jetpur Navagadh \",\n  \"Jhansi \",\n  \"Jhunjhunun \",\n  \"Jind \",\n  \"Jodhpur \",\n  \"Junagadh \",\n  \"Kadapa \",\n  \"Kaithal \",\n  \"Kakinada \",\n  \"Kalol \",\n  \"Kalyani \",\n  \"Kamarhati \",\n  \"Kancheepuram \",\n  \"Kanchrapara \",\n  \"Kanpur \",\n  \"Kanpur City\",\n  \"Karaikkudi \",\n  \"Karawal Nagar \",\n  \"Karimnagar \",\n  \"Karnal \",\n  \"Kasganj \",\n  \"Kashipur \",\n  \"Katihar \",\n  \"Khammam \",\n  \"Khandwa \",\n  \"Khanna \",\n  \"Kharagpur \",\n  \"Khardaha \",\n  \"Khargone \",\n  \"Khora \",\n  \"Khurja \",\n  \"Kirari Suleman Nagar \",\n  \"Kishanganj \",\n  \"Kishangarh \",\n  \"Kochi \",\n  \"Kolar \",\n  \"Kolhapur \",\n  \"Kolkata \",\n  \"Kollam \",\n  \"Korba \",\n  \"Kota \",\n  \"Kozhikode \",\n  \"Krishnanagar \",\n  \"Kulti \",\n  \"Kumbakonam \",\n  \"Kurichi \",\n  \"Kurnool \",\n  \"Lakhimpur \",\n  \"Lalitpur \",\n  \"Latur \",\n  \"Loni \",\n  \"Lucknow \",\n  \"Ludhiana \",\n  \"Machilipatnam \",\n  \"Madanapalle \",\n  \"Madavaram \",\n  \"Madhyamgram \",\n  \"Madurai \",\n  \"Mahbubnagar \",\n  \"Mahesana \",\n  \"Maheshtala \",\n  \"Mainpuri \",\n  \"Malegaon \",\n  \"Malerkotla \",\n  \"Mandoli \",\n  \"Mandsaur \",\n  \"Mandya \",\n  \"Mangalore \",\n  \"Mango \",\n  \"Mathura \",\n  \"Maunath Bhanjan \",\n  \"Medinipur \",\n  \"Meerut \",\n  \"Mira Bhayander \",\n  \"Miryalaguda \",\n  \"Mirzapur\",\n  \"Modinagar \",\n  \"Moga \",\n  \"Moradabad \",\n  \"Morena \",\n  \"Morvi \",\n  \"Motihari \",\n  \"Mughalsarai \",\n  \"Muktsar \",\n  \"Munger \",\n  \"Murwara \",\n  \"Mustafabad \",\n  \"Muzaffarnagar \",\n  \"Muzaffarpur \",\n  \"Mysore \",\n  \"Nabadwip \",\n  \"Nadiad \",\n  \"Nagaon \",\n  \"Nagapattinam \",\n  \"Nagaur \",\n  \"Nagda \",\n  \"Nagercoil \",\n  \"Nagpur \",\n  \"Naihati \",\n  \"Nalgonda \",\n  \"Nanded Waghala \",\n  \"Nandurbar \",\n  \"Nandyal \",\n  \"Nangloi Jat \",\n  \"Narasaraopet \",\n  \"Nashik \",\n  \"Navi Mumbai \",\n  \"Navi Mumbai Panvel Raigarh \",\n  \"Navsari \",\n  \"Neemuch \",\n  \"Nellore \",\n  \"New Delhi \",\n  \"Neyveli \",\n  \"Nizamabad \",\n  \"Noida \",\n  \"North Barrackpur \",\n  \"North Dum Dum \",\n  \"Ongole \",\n  \"Orai \",\n  \"Osmanabad \",\n  \"Ozhukarai \",\n  \"Palakkad \",\n  \"Palanpur \",\n  \"Pali \",\n  \"Pallavaram \",\n  \"Palwal \",\n  \"Panchkula \",\n  \"Panihati \",\n  \"Panipat \",\n  \"Panvel \",\n  \"Parbhani \",\n  \"Patan \",\n  \"Pathankot \",\n  \"Patiala \",\n  \"Patna \",\n  \"Pilibhit \",\n  \"Pimpri Chinchwad \",\n  \"Pithampur \",\n  \"Porbandar \",\n  \"Port Blair \",\n  \"Proddatur \",\n  \"Puducherry \",\n  \"Pudukkottai \",\n  \"Pune \",\n  \"Puri \",\n  \"Purnia \",\n  \"Puruliya \",\n  \"Rae Bareli \",\n  \"Raichur \",\n  \"Raiganj \",\n  \"Raigarh \",\n  \"Raipur \",\n  \"Rajahmundry \",\n  \"Rajapalayam \",\n  \"Rajarhat Gopalpur \",\n  \"Rajkot \",\n  \"Rajnandgaon \",\n  \"Rajpur Sonarpur \",\n  \"Ramagundam \",\n  \"Rampur \",\n  \"Ranchi \",\n  \"Ranibennur \",\n  \"Raniganj \",\n  \"Ratlam \",\n  \"Raurkela Industrial Township \",\n  \"Raurkela Town \",\n  \"Rewa \",\n  \"Rewari \",\n  \"Rishra \",\n  \"Robertson Pet \",\n  \"Rohtak \",\n  \"Roorkee \",\n  \"Rudrapur \",\n  \"Sagar \",\n  \"Saharanpur \",\n  \"Saharsa \",\n  \"Salem \",\n  \"Sambalpur \",\n  \"Sambhal \",\n  \"Sangli Miraj Kupwad \",\n  \"Santipur \",\n  \"Sasaram \",\n  \"Satara \",\n  \"Satna \",\n  \"Sawai Madhopur \",\n  \"Secunderabad \",\n  \"Sehore \",\n  \"Seoni \",\n  \"Serampore \",\n  \"Shahjahanpur \",\n  \"Shamli \",\n  \"Shikohabad \",\n  \"Shillong \",\n  \"Shimla \",\n  \"Shimoga \",\n  \"Shivpuri \",\n  \"Sikar \",\n  \"Silchar \",\n  \"Siliguri \",\n  \"Singrauli \",\n  \"Sirsa \",\n  \"Sitapur \",\n  \"Siwan \",\n  \"Solapur \",\n  \"Sonipat \",\n  \"South Dum Dum \",\n  \"Srikakulam \",\n  \"Srinagar \",\n  \"Sujangarh \",\n  \"Sultan Pur Majra \",\n  \"Sultanpur \",\n  \"Surat \",\n  \"Surendranagar Dudhrej \",\n  \"Suryapet \",\n  \"Tadepalligudem \",\n  \"Tadpatri \",\n  \"Tambaram \",\n  \"Tenali \",\n  \"Thane \",\n  \"Thanesar \",\n  \"Thanjavur \",\n  \"Thiruvananthapuram \",\n  \"Thoothukkudi \",\n  \"Thrissur \",\n  \"Tiruchirappalli \",\n  \"Tirunelveli \",\n  \"Tirupati \",\n  \"Tiruppur \",\n  \"Tiruvannamalai \",\n  \"Tiruvottiyur \",\n  \"Titagarh \",\n  \"Tonk \",\n  \"Tumkur \",\n  \"Udaipur \",\n  \"Udgir \",\n  \"Udupi \",\n  \"Ujjain \",\n  \"Ulhasnagar \",\n  \"Uluberia \",\n  \"Unnao \",\n  \"Uttarpara Kotrung \",\n  \"Vadodara \",\n  \"Valsad \",\n  \"Varanasi \",\n  \"Vasai Virar City \",\n  \"Vellore \",\n  \"Veraval \",\n  \"Vidisha \",\n  \"Vijayawada \",\n  \"Visakhapatnam\",\n  \"Vizianagaram \",\n  \"Warangal \",\n  \"Wardha \",\n  \"Yamunanagar \",\n  \"Yavatmal \",\n];\n","import React, { useState } from \"react\";\n\nimport {\n  AutoComplete,\n  Form,\n  Select,\n  Radio,\n  Button,\n  Row,\n  Col,\n  Input,\n} from \"antd\";\n\nimport { capitalize } from \"../../utils\";\nimport { paintLocationDetails, cities } from \"../../fixtures\";\n\nexport default () => {\n  const cities_options = cities.map((city) => ({ value: city }));\n  let initial_paint_area = [];\n  let initial_paint_types = {};\n  if (!!paintLocationDetails && !!paintLocationDetails.interior) {\n    initial_paint_area = !!paintLocationDetails.interior.paint_area\n      ? paintLocationDetails.interior.paint_area\n      : [];\n    initial_paint_types = !!paintLocationDetails.interior.paint_types\n      ? paintLocationDetails.interior.paint_types\n      : {};\n  }\n\n  const [form] = Form.useForm();\n  const [paintArea, setPaintArea] = useState(initial_paint_area);\n  const [paintTypes, setPaintTypes] = useState(initial_paint_types);\n  const [currentPaintType, setCurrentPaintType] = useState(\"standard\");\n  const validateInput = (event) => {\n    var charC = event.which ? event.which : event.keyCode;\n    if (charC > 31 && (charC < 48 || charC > 57)) {\n      event.preventDefault();\n    }\n  };\n\n  const handleLocationTypeChange = (event) => {\n    const newLocationType = event.target.value;\n    if (\n      !!newLocationType &&\n      !!paintLocationDetails &&\n      paintLocationDetails.hasOwnProperty(newLocationType)\n    ) {\n      setPaintArea(paintLocationDetails[newLocationType].paint_area);\n      setPaintTypes(paintLocationDetails[newLocationType].paint_types);\n      form.setFieldsValue({\n        paint_name:\n          paintLocationDetails[newLocationType][\"paint_types\"][\n            currentPaintType\n          ][0],\n      });\n    }\n  };\n\n  const handlePaintTypeChange = (event) => {\n    const newPaintType = event.target.value;\n    if (!!newPaintType && !!paintLocationDetails) {\n      form.setFieldsValue({\n        paint_type: newPaintType,\n        paint_name: paintTypes[newPaintType][0],\n      });\n      setCurrentPaintType(newPaintType);\n    }\n  };\n  const handleSubmit = (values) => {\n    console.log(\"received values from the form are\", values);\n  };\n\n  return (\n    <div>\n      <Form onFinish={handleSubmit} form={form}>\n        <Form.Item\n          name=\"city\"\n          label=\"Choose a city\"\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: \"Please select your country!\",\n            },\n          ]}\n        >\n          <AutoComplete\n            options={cities_options}\n            placeholder=\"Please select a city\"\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"house_paint_application_type\"\n          label=\"Painting Type\"\n          initialValue=\"fresh_paint\"\n        >\n          <Radio.Group>\n            <Radio value=\"fresh_paint\">Fresh Paint</Radio>\n            <Radio value=\"repainting\">Repainting</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item\n          name=\"carpet_area\"\n          label=\"Carpet Area\"\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: \"Please input the Carpet Area!\",\n            },\n          ]}\n        >\n          <Input onKeyPress={validateInput} />\n        </Form.Item>\n        <Form.Item\n          name=\"location_type\"\n          label=\"Interior/Exterior\"\n          initialValue=\"interior\"\n        >\n          <Radio.Group onChange={handleLocationTypeChange}>\n            <Radio.Button value=\"interior\">Interior</Radio.Button>\n            <Radio.Button value=\"exterior\">Exterior</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        {!!paintArea && !!paintArea.length > 0 && (\n          <Form.Item name=\"paint_area\" initialValue={paintArea[0]}>\n            <Radio.Group>\n              {paintArea.map((paintAreaValue) => (\n                <Radio value={paintAreaValue}>\n                  {capitalize(paintAreaValue)}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Form.Item>\n        )}\n\n        <Form.Item name=\"paint_type\" label=\"Paint Type\" initialValue=\"standard\">\n          <Radio.Group onChange={handlePaintTypeChange}>\n            <Radio.Button value=\"standard\">Standard</Radio.Button>\n            <Radio.Button value=\"premium\">Premium</Radio.Button>\n            <Radio.Button value=\"super_premium\">Super-Premium</Radio.Button>\n            <Radio.Button value=\"luxury\">Luxury</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n\n        {!!paintTypes && (\n          <Form.Item\n            name=\"paint_name\"\n            initialValue={paintTypes[currentPaintType][0]}\n          >\n            <Radio.Group>\n              {Object.keys(paintTypes).map((paintType) => {\n                let paintNames = [];\n                if (currentPaintType === paintType) {\n                  paintNames = paintTypes[paintType];\n                }\n\n                return paintNames.map((paintName) => (\n                  <Radio value={paintName}>{paintName}</Radio>\n                ));\n              })}\n            </Radio.Group>\n          </Form.Item>\n        )}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Calculate Now\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","export const capitalize = (str_val) => {\n  if (typeof str_val !== \"string\") return \"\";\n  return str_val.charAt(0).toUpperCase() + str_val.slice(1);\n};\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nimport \"./Dashboard.css\";\n\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport CostEstimationForm from \"../../CostEstimation\";\n\nconst { Content } = Layout;\n\nexport default () => {\n  return (\n    <Layout className=\"cost-estimation-container\">\n      <Header />\n      <Content>\n        <CostEstimationForm />\n      </Content>\n      <Footer />\n    </Layout>\n  );\n};\n","import React from \"react\";\n\nimport Dashboard from \"./components/ui-components/Dashboard\";\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}